@using EventEase.Models
@using EventEase.Services
@inject IAttendanceService AttendanceService

<div class="card">
    <div class="card-header">
        <h5 class="mb-0">Register for Event</h5>
    </div>
    <div class="card-body">
        <EditForm Model="@model" OnValidSubmit="@HandleSubmit">
            <DataAnnotationsValidator />

            <div class="form-group mb-3">
                <label for="name">Name</label>
                <InputText id="name" @bind-Value="model.AttendeeName" class="form-control" />
                <ValidationMessage For="@(() => model.AttendeeName)" />
            </div>

            <div class="form-group mb-3">
                <label for="email">Email</label>
                <InputText id="email" @bind-Value="model.AttendeeEmail" class="form-control" />
                <ValidationMessage For="@(() => model.AttendeeEmail)" />
            </div>

            <button type="submit" class="btn btn-primary">Register</button>
        </EditForm>
    </div>
</div>

@code {
    [Parameter]
    public int EventId { get; set; }

    [Parameter]
    public EventCallback OnRegistrationComplete { get; set; }

    private Attendance model = new();

    private async Task HandleSubmit()
    {
        await AttendanceService.RegisterAttendeeAsync(EventId, model);
        model = new();
        if (OnRegistrationComplete.HasDelegate)
            await OnRegistrationComplete.InvokeAsync();
    }
}