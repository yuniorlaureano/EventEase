@page "/events"
@using EventEase.Models
@using EventEase.Services
@inject IEventService EventService
@inject ILogger<CreateEvent> Logger

<h3>Events</h3>

<div class="mb-3">
    <a href="/events/create" class="btn btn-primary">Create New Event</a>
</div>

@if (events.Any())
{
    <div class="row">
        @foreach (var evt in events)
        {
            <div class="col-md-6 mb-3" @key="evt.Id">
                <a href=@($"/events/{evt.Id}") class="text-decoration-none">
                    <EventCard Event="@evt" />
                </a>
            </div>
        }
    </div>
}
else
{
    <p>No events available.</p>
}

@code {
    private List<Event> events = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadEvents();
        EventService.OnChange += HandleEventServiceChanged;
    }

    private async void HandleEventServiceChanged()
    {
        await LoadEvents();
        await InvokeAsync(StateHasChanged);
    }

    private async Task LoadEvents()
    {
        events = await EventService.GetEventsAsync();
        Logger.LogInformation("Loaded {EventCount} events", events.Count);        
        Logger.LogInformation("Loaded {@Events} events", events);
    }
}